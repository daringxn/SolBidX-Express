// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id              Int       @id @default(autoincrement())
  name            String?   
  wallet_address  String?  
  created_items   items[]   @relation("usercreateditems")
  collected_items items[]   @relation("usercollecteditems")
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
  deletedAt       DateTime?
}

model items {
  id                Int       @id @default(autoincrement())
  name              String?   
  description       String?   
  image             String?   
  price             Float?    
  // properties  String?   
  // size        Int?      
  // blockchain  String?   
  royatity          Float?   
  contract_address  String?
  creator           users? @relation("usercreateditems", fields: [creator_id], references: [id])
  owner             users? @relation("usercollecteditems", fields: [collector_id], references: [id])
  creator_id        Int?
  collector_id      Int?
  status            String?
  createdAt         DateTime? @default(now())
  updatedAt         DateTime? @updatedAt
  deletedAt         DateTime?
}

model offers {
  id          Int       @id @default(autoincrement())
  product_id  Int?   
  user_id     Int?   
  price       Int?   
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

model activities {
  id          Int       @id @default(autoincrement())
  item_id     Int?
  type        String?
  price       Float?
  from        Int?
  to          Int?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

